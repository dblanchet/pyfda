#
# Build file for creating DMG files.
#
# The DMG packager looks for a template.dmg.bz2 for using as its
# DMG template. If it doesn't find one, it generates a clean one.
#
# If you create a DMG template, you should make one containing all
# the files listed in $(SOURCE_FILES) below, and arrange everything to suit
# your style. The contents of the files themselves does not matter, so
# they can be empty (they will be overwritten later).
#
# Remko Tron√ßon
# http://el-tramo.be/about
# Licensed under the MIT License. See COPYING for details.
#
# Available at https://github.com/remko/fancy-dmg/blob/master/Makefile
# Added a few local fixes and bundle generation.


BUNDLE_NAME = PyFlyDreamAltimeter
BUNDLE_SHORT_VERSION = 0.1
BUNDLE_IDENTIFIER = fr.free.blanchet.david
BUNDLE_INFO_STRING = $(BUNDLE_NAME) $(BUNDLE_SHORT_VERSION)
BUNDLE_VERSION = $(BUNDLE_NAME) $(BUNDLE_SHORT_VERSION)

################################################################################
# Customizable variables
################################################################################

NAME ?= $(BUNDLE_NAME)
VERSION ?= 0.1

SOURCE_DIR ?= .
SOURCE_FILES ?= $(BUNDLE_NAME).app README.md

TEMPLATE_DMG ?= res/macos/Template.dmg

################################################################################
# DMG building. No editing should be needed beyond this point.
################################################################################

MASTER_DMG=$(NAME)-$(VERSION).dmg
WC_DMG=wc.dmg
WC_DIR=wc

.PHONY: all
all: $(MASTER_DMG)

$(TEMPLATE_DMG): $(TEMPLATE_DMG).bz2
	bunzip2 -k $<

$(TEMPLATE_DMG).bz2:
	@echo
	@echo --------------------- Generating empty template --------------------
	mkdir template
	hdiutil create -fs HFSX -layout SPUD -size 40m "$(TEMPLATE_DMG)" -srcfolder template -format UDRW -volname "$(NAME)" -quiet
	rmdir template
	bzip2 "$(TEMPLATE_DMG)"
	@echo

$(WC_DMG): $(TEMPLATE_DMG)
	cp $< $@

$(MASTER_DMG): $(WC_DMG) $(addprefix $(SOURCE_DIR)/,$(SOURCE_FILES))
	@echo
	@echo --------------------- Creating Disk Image --------------------
	mkdir -p $(WC_DIR)
	hdiutil attach "$(WC_DMG)" -noautoopen -quiet -mountpoint "$(WC_DIR)"
	for i in $(SOURCE_FILES); do  \
		rm -rf "$(WC_DIR)/$$i"; \
		ditto -rsrc "$(SOURCE_DIR)/$$i" "$(WC_DIR)/$$i"; \
	done
	#rm -f "$@"
	#hdiutil create -srcfolder "$(WC_DIR)" -format UDZO -imagekey zlib-level=9 "$@" -volname "$(NAME) $(VERSION)" -scrub -quiet
	WC_DEV=`hdiutil info | grep "$(WC_DIR)" | grep "/disk" | awk '{print $$1}'` && \
	hdiutil detach $$WC_DEV -quiet -force
	rm -f "$(MASTER_DMG)"
	hdiutil convert "$(WC_DMG)" -quiet -format UDZO -imagekey zlib-level=9 -o "$@"
	rm -rf $(WC_DIR)

.PHONY: clean-mac
clean-mac:
	rm -rf $(BUNDLE_NAME).app
	rm -rf $(TEMPLATE_DMG) $(MASTER_DMG) $(WC_DMG)

macos_bundle:
	mkdir $(BUNDLE_NAME).app
	mkdir $(BUNDLE_NAME).app/Contents
	mkdir $(BUNDLE_NAME).app/Contents/MacOS
	mkdir $(BUNDLE_NAME).app/Contents/Resources

	cp res/macos/Info.plist.tmpl $(BUNDLE_NAME).app/Contents/Info.plist
	sed -i '' 's/BUNDLE_INFO_STRING/$(BUNDLE_INFO_STRING)/' $(BUNDLE_NAME).app/Contents/Info.plist
	sed -i '' 's/BUNDLE_IDENTIFIER/$(BUNDLE_IDENTIFIER)/' $(BUNDLE_NAME).app/Contents/Info.plist
	sed -i '' 's/BUNDLE_NAME/$(BUNDLE_NAME)/' $(BUNDLE_NAME).app/Contents/Info.plist
	sed -i '' 's/BUNDLE_SHORT_VERSION/$(BUNDLE_SHORT_VERSION)/' $(BUNDLE_NAME).app/Contents/Info.plist
	sed -i '' 's/BUNDLE_VERSION/$(BUNDLE_VERSION)/' $(BUNDLE_NAME).app/Contents/Info.plist

	cp res/macos/PkgInfo $(BUNDLE_NAME).app/Contents

	cp pyfda.py $(BUNDLE_NAME).app/Contents/MacOS/
	cp pyfdagui.py $(BUNDLE_NAME).app/Contents/MacOS/

	cp -r flydream $(BUNDLE_NAME).app/Contents/MacOS/
	cp -r gui $(BUNDLE_NAME).app/Contents/MacOS/

	cp res/macos/PyFda.icns $(BUNDLE_NAME).app/Contents/Resources/

macos_dmg: macos_bundle $(MASTER_DMG)

